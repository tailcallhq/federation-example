schema @server(port: 8000) @upstream(baseURL: "http://localhost:8080") {
  query: Query
}
type Query {
  employee(id: Int!): Employee @http(path: "/employees/{{.args.id}}")
  employees: [Employee!]! @http(path: "/employees")
  products: [Products!]! @http(path: "/products")
  teammates(team: Department!): [Employee!]! @http(path: "/employees", query:[{key: "department", value: "{{.args.team}}"}])
}

type Mutation {
  updateEmployeeTag(id: Int!, tag: String!): Employee
}

type Subscription {
  """
  `currentTime` will return a stream of `Time` objects.
  """
  currentTime: Time!
}

enum Department {
  ENGINEERING
  MARKETING
  OPERATIONS
}

interface RoleType {
  departments: [Department!]!
  title: [String!]!
}

enum EngineerType {
  BACKEND
  FRONTEND
  FULLSTACK
}

interface Identifiable {
  id: Int!
}

type Engineer implements RoleType {
  departments: [Department!]!
  engineer_type: EngineerType @modify(name: "engineerType")
  title: [String!]!
}

type Marketer implements RoleType {
  departments: [Department!]!
  title: [String!]!
}

enum OperationType {
  FINANCE
  HUMAN_RESOURCES
}

type Operator implements RoleType {
  departments: [Department!]!
  operator_type: [OperationType] @modify(name: "operatorType")
  title: [String!]!
}

enum Country {
  AMERICA
  ENGLAND
  GERMANY
  INDIA
  NETHERLANDS
  PORTUGAL
  SPAIN
  UKRAINE
}

type Details @shareable {
  forename: String!
  location: Country!
  surname: String!
}

type Employee implements Identifiable @key(fields: "id") {
  details: Details! @shareable
  id: Int!
  tag: String!
  role: RoleType!
  notes: String
  updatedAt: String!
  startDate: String! @requiresScopes(scopes: [["read:employee", "read:private"], ["read:all"]])
}

type Time {
  unixTime: Int!
  timeStamp: String!
}

union Products = Consultancy | Cosmo | SDK

interface IProduct {
  upc: ID!
  engineers: [Employee!]!
}

type Consultancy @key(fields: "upc") {
  upc: ID!
  lead: Employee!
}

type Cosmo implements IProduct @key(fields: "upc") {
  upc: ID!
  engineers: [Employee!]!
  lead: Employee!
}

type SDK implements IProduct @key(fields: "upc") {
  upc: ID!
  engineers: [Employee!]!
  owner: Employee!
}
