schema @server(port: 8002) @upstream(baseURL: "http://localhost:8082") {
  query: Query
}

type Query {
  _employeeHobbies(id: Int!): Employee @http(path: "/employees/{{.args.id}}/hobbies")
  _sdk(upc: String!): SDK @http(path: "/sdk/{{.args.upc}}")
}

enum ExerciseType {
  CALISTHENICS @alias(options: ["Calisthenics"])
  HIKING @alias(options: ["Hiking"])
  SPORT @alias(options: ["FishSport"])
  STRENGTH_TRAINING @alias(options: ["Strength Training"])
}

type Exercise {
  category: ExerciseType!
}

interface Experience {
  yearsOfExperience: Float!
}

type Flying implements Experience {
  planeModels: [String!]!
  yearsOfExperience: Float!
}

enum GameGenre {
  ADVENTURE @alias(options: ["Adventure"])
  BOARD @alias(options: ["Board"])
  FPS @alias(options: ["Fps"])
  CARD @alias(options: ["Card"])
  RPG @alias(options: ["Rpg"])
  ROGUELITE @alias(options: ["Roguelite"])
  SIMULATION @alias(options: ["Simulation"])
  STRATEGY @alias(options: ["Strategy"])
}

type Gaming implements Experience {
  genres: [GameGenre!]!
  name: String!
  yearsOfExperience: Float!
}

type Other {
  name: String!
}

enum ProgrammingLanguage {
  CSHARP @alias(options: ["CSharp"])
  GO @alias(options: ["Go"])
  RUST @alias(options: ["Rust"])
  TYPESCRIPT @alias(options: ["Typescript"])
}

type Programming {
  languages: [ProgrammingLanguage!]!
}

enum Country {
  AMERICA @alias(options: ["America"])
  ENGLAND @alias(options: ["England"])
  GERMANY @alias(options: ["Germany"])
  INDONESIA @alias(options: ["Indonesia"])
  KOREA @alias(options: ["Korea"])
  NETHERLANDS @alias(options: ["Netherlands"])
  PORTUGAL @alias(options: ["Portugal"])
  SERBIA @alias(options: ["Serbian"])
  SPAIN @alias(options: ["Spain"])
  TAIWAN @alias(options: ["Taiwan"])
  THAILAND @alias(options: ["Thailand"])
}

type Travelling {
  countriesLived: [Country!]!
}

union Hobby = Exercise | Flying | Gaming | Programming | Travelling | Other

type Employee @key(fields: "id") {
  id: Int!
  hobbies: [Hobby!]!
}

type SDK @key(fields: "upc") {
  upc: ID!
  client_languages: [ProgrammingLanguage!]! @modify(name: "clientLanguages")
}
