schema {
  query: Query
}

type Query {
  bigResponse(
    artificialDelay: Int! = 0
    bigObjects: Int! = 100
    nestedObjects: Int! = 100
    deeplyNestedObjects: Int! = 100
  ): [BigObject!]!
    @http(
      url: "http://127.0.0.1:4006/big-json"
      dedupe: false
      query: [
        {
          key: "artificialDelay"
          value: "{{.args.artificialDelay}}"
          skipEmpty: true
        }
        { key: "bigObjects", value: "{{.args.bigObjects}}", skipEmpty: true }
        {
          key: "nestedObjects"
          value: "{{.args.nestedObjects}}"
          skipEmpty: true
        }
        {
          key: "deeplyNestedObjects"
          value: "{{.args.deeplyNestedObjects}}"
          skipEmpty: true
        }
      ]
    )
}

type BigObject {
  nestedObjects: [NestedObject!]!
}

type NestedObject {
  deeplyNestedObjects: [DeeplyNestedObject!]!
}

type DeeplyNestedObject {
  aFieldOnDeeplyNestedObject: String!
  bFieldOnDeeplyNestedObject: Int!
  cFieldOnDeeplyNestedObject: Boolean!
  dFieldOnDeeplyNestedObject: Float!
  eFieldOnDeeplyNestedObject: String!
  fFieldOnDeeplyNestedObject: Int!
  gFieldOnDeeplyNestedObject: Boolean!
  hFieldOnDeeplyNestedObject: Float!
  iFieldOnDeeplyNestedObject: String!
  jFieldOnDeeplyNestedObject: Int!
  kFieldOnDeeplyNestedObject: Boolean!
  lFieldOnDeeplyNestedObject: Float!
  mFieldOnDeeplyNestedObject: String!
  nFieldOnDeeplyNestedObject: Int!
  oFieldOnDeeplyNestedObject: Boolean!
  pFieldOnDeeplyNestedObject: Float!
  qFieldOnDeeplyNestedObject: String!
  rFieldOnDeeplyNestedObject: Int!
  sFieldOnDeeplyNestedObject: Boolean!
  tFieldOnDeeplyNestedObject: Float!
  uFieldOnDeeplyNestedObject: String!
  vFieldOnDeeplyNestedObject: Int!
  wFieldOnDeeplyNestedObject: Boolean!
  xFieldOnDeeplyNestedObject: Float!
  yFieldOnDeeplyNestedObject: String!
  zFieldOnDeeplyNestedObject: Int!
}