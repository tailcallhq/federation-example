schema @server(port: 8030) @upstream(baseURL: "http://127.0.0.1:8080") {
  query: Query
}

type Query {
  employees: [Employee!]!
    @http(baseURL: "http://127.0.0.1:8080", path: "/employees")
}

enum Department {
  ENGINEERING
  MARKETING
  OPERATIONS
}

interface RoleType {
  departments: [Department!]!
  title: [String!]!
}

enum EngineerType {
  BACKEND
  FRONTEND
  FULLSTACK
}

interface Identifiable {
  id: Int!
}

type Engineer implements RoleType {
  departments: [Department!]!
  engineerType: EngineerType
  title: [String!]!
}

type Marketer implements RoleType {
  departments: [Department!]!
  title: [String!]!
}

enum OperationType {
  FINANCE
  HUMAN_RESOURCES
}

type Operator implements RoleType {
  departments: [Department!]!
  operatorType: [OperationType!]!
  title: [String!]!
}

enum Country {
  AMERICA @alias(options: ["America"])
  ENGLAND @alias(options: ["England"])
  GERMANY @alias(options: ["Germany"])
  INDONESIA @alias(options: ["Indonesia"])
  KOREA @alias(options: ["Korea"])
  NETHERLANDS @alias(options: ["Netherlands"])
  PORTUGAL @alias(options: ["Portugal"])
  SERBIA @alias(options: ["Serbia"])
  SPAIN @alias(options: ["Spain"])
  TAIWAN @alias(options: ["Taiwan"])
  THAILAND @alias(options: ["Thailand"])
}

type Details {
  forename: String!
  surname: String!
}

type Employee implements Identifiable {
  details: Details!
  id: Int!
  tag: String!
  role: RoleType!
  notes: String
  updatedAt: String!
  startDate: String!
}
